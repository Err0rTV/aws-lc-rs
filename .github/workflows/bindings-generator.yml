name: Auto-generate Bindings

on:
  push:
    branches:
      - 'generate/aws-lc-sys-*'

env:
  GIT_AUTHOR_NAME: "aws-lc-sys-bindings-generator"
  GIT_AUTHOR_EMAIL: "aws-lc-github-bot@amazon.com"
  GIT_COMMITTER_NAME: "aws-lc-sys-bindings-generator"
  GIT_COMMITTER_EMAIL: "aws-lc-github-bot@amazon.com"

jobs:
  collect-symbols-and-commit:
    if: github.repository == 'aws/aws-lc-rs'
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-12, macos-13-xlarge ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ref: ${{ github.ref_name }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.18'
      - name: Install current Bash on macOS
        if: runner.os == 'macOS'
        run: brew install bash coreutils
      - name: No-prefix build for ${{ matrix.os }}
        env:
          AWS_LC_SYS_INTERNAL_NO_PREFIX: "1"
        run: |
          cargo test -p aws-lc-sys --features bindgen,ssl
      - name: Collect symbols
        run: |
          ./scripts/build/collect_symbols.sh
          cargo clean
      - name: Install cross
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cross --locked --git https://github.com/cross-rs/cross
      - name: No-prefix build for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-latest'
        env:
          AWS_LC_SYS_INTERNAL_NO_PREFIX: "1"
        run: |
          cross test -p aws-lc-sys --features bindgen,ssl --target aarch64-unknown-linux-gnu
      - name: Collect symbols
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./scripts/build/collect_symbols.sh -t aarch64-unknown-linux-gnu
          cargo clean
      - name: Commit & Push changes
        run: |
          git add .
          git commit --allow-empty -m "Symbols generated on ${{ matrix.os }}"
          git pull --rebase
          git push
  generate-headers-and-commit:
    needs: collect-symbols-and-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ref: ${{ github.ref_name }}
      - uses: dtolnay/rust-toolchain@nightly
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.18'
      - name: Generate Prefix Headers
        run: ./scripts/generate/_generate_prefix_headers.sh -c aws-lc-sys
      - name: Commit & Push changes
        run: |
          git add .
          git commit --allow-empty -m "Generated Prefix Headers"
          git pull --rebase
          git push
  generate-bindings-and-commit:
    needs: generate-headers-and-commit
    if: github.repository == 'aws/aws-lc-rs'
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-12, macos-13-xlarge ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ref: ${{ github.ref_name }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Install current Bash on macOS
        if: runner.os == 'macOS'
        run: brew install bash coreutils
      - name: Generate bindings for ${{ matrix.os }}
        env:
          AWS_LC_RUST_INTERNAL_BINDGEN: "1"
        run: |
          cargo test -p aws-lc-sys --features bindgen,ssl
      - name: Install cross
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cross --locked --git https://github.com/cross-rs/cross
      - name: Generate bindings for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-latest'
        env:
          AWS_LC_RUST_INTERNAL_BINDGEN: "1"
        run: |
          cross test -p aws-lc-sys --features bindgen,ssl --target aarch64-unknown-linux-gnu
      - name: Commit & Push changes
        run: |
          git add .
          git commit --allow-empty -m "Bindings generated on ${{ matrix.os }}"
          git pull --rebase
          git push
